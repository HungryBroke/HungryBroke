default_stages: [ commit, push ]
default_language_version:
  python: python3

ci:
  #  https://pre-commit.ci/
  autofix_prs: true


repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-toml
      - id: check-yaml
      - id: check-toml
      - id: check-added-large-files
      - id: debug-statements
      - id: check-merge-conflict

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        name: black-backend
        files: backend/
        args: [ "--config", "backend/pyproject.toml" ]

  - repo: https://github.com/pycqa/isort
    # Automatically keeps your imports sorted in a specific way.
    # Requires configuration to see which modules are first party.
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort-backend
        files: backend/
        args: [ "--settings-path", "backend/pyproject.toml", ]


  - repo: https://github.com/charliermarsh/ruff-pre-commit
    # A flake8 replacement, that uses Rust underwater.
    rev: v0.0.272
    hooks:
      - id: ruff
        name: lint-backend
        files: backend/
        args: [ "--config", "backend/pyproject.toml" ]

  - repo: https://github.com/asottile/pyupgrade
    # Automatically updates old python structures to new ones
    rev: v3.7.0
    hooks:
      - id: pyupgrade
        args: [ --py310-plus ]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v1.3.0'
    hooks:
      - id: mypy
        name: mypy-backend
        args: [ "--config-file", "backend/pyproject.toml" ]


  - repo: https://github.com/adamchainz/django-upgrade
    rev: 1.14.0
    hooks:
      - id: django-upgrade
        args: [ --target-version, "4.2" ]


  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.3.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [ push ]
